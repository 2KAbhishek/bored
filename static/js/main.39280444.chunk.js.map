{"version":3,"sources":["components/header/Header.jsx","components/button/Button.jsx","components/bored/Bored.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","title","onClick","history","go","defaultProps","Button","color","text","link","href","className","style","backgroundColor","Bored","React","useState","activity","setActivity","useEffect","axios","get","then","response","console","log","data","catch","error","type","length","toString","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAKMA,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACE,iCACE,oBAAIC,QAAW,kBAAMC,QAAQC,GAAG,IAAhC,SAAqCH,OAK3CD,EAAOK,aAAe,CAACJ,MAAO,UAMfD,QCAAM,G,MAhBA,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KAC5B,OACE,mBAAGC,KAAMD,EAAT,SACE,wBAAQE,UAAU,SAASC,MAAO,CAACC,gBAAiBN,GAApD,SACGC,QCyBMM,EAxBD,WACZ,MAAgCC,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KAWA,OATAH,IAAMI,WAAU,WACdC,IAAMC,IANG,yCAMUC,MAAK,SAACC,GACvBC,QAAQC,IAAIF,EAASG,MACrBR,EAAYK,EAASG,SACpBC,OAAM,SAACC,GACRJ,QAAQC,IAAIG,QAEb,IAGD,sBAAKjB,UAAU,QAAf,UACE,cAAC,EAAD,CAAQV,MAAM,WACd,6BAAKgB,EAASA,WACd,6BAAKA,EAASY,OACbZ,EAASR,KAAKqB,OAAS,EACvB,cAAC,EAAD,CAAQtB,KAAK,eAAeC,KAAMQ,EAASR,KAAKsB,aAAiB,SCfzDC,EARH,WACV,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAgD,IAA9Cc,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG5BZ,EAAgBT,QAAQC,O","file":"static/js/main.39280444.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\nimport PropTypes from 'prop-types';\n\n\nconst Header = ({title}) => {\n  return (\n    <header>\n      <h1 onClick = {() => history.go(0)}>{title}</h1>\n    </header>\n  );\n};\n\nHeader.defaultProps = {title: 'Bored?'};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({color, text, link}) => {\n  return (\n    <a href={link}>\n      <button className='Button' style={{backgroundColor: color}}>\n        {text}\n      </button>\n    </a>\n  );\n};\n\nButton.propTypes = {\n  color: PropTypes.string,\n  text: PropTypes.string,\n  link: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport axios from 'axios';\nimport './Bored.css';\nimport Header from '../header/Header';\nimport Button from '../button/Button';\n\nconst baseURL = `https://www.boredapi.com/api/activity`;\n\nconst Bored = () => {\n  const [activity, setActivity] = React.useState('');\n\n  React.useEffect(() => {\n    axios.get(baseURL).then((response) => {\n      console.log(response.data);\n      setActivity(response.data);\n    }).catch((error) => {\n      console.log(error);\n    });\n  }, []);\n\n  return (\n    <div className=\"Bored\">\n      <Header title='Bored?'/>\n      <h2>{activity.activity}</h2>\n      <h3>{activity.type}</h3>\n      {activity.link.length > 0 ?\n      (<Button text='Get Started!' link={activity.link.toString()}/>) : null\n      }\n    </div>\n  );\n};\n\nexport default Bored;\n","import './App.css';\nimport Bored from './components/bored/Bored.jsx';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Bored/>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}